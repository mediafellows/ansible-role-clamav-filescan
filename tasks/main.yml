---
# tasks file for mediapeers.clamav-filescan


- name: Check if we are on Ubuntu
  fail:
    msg: 'This role will only work on Ubuntu'
  when: ansible_distribution != 'Ubuntu'

- name: Install clamav apt package (also installs freshclam and clamav-base)
  apt:
    name: clamav
    state: present

- name: Make sure clamav-unofficial-sigs apt package is NOT installed
  apt:
    name: clamav-unofficial-sigs
    purge: yes
    state: absent

- name: Run freshclam once to initially get the official ClamAV signatures
  shell: freshclam
  register: freshclam_result

- name: Output freshclam results
  debug:
    var: freshclam_result.stdout_lines

# -- Start clamav-unofficial-sigs install --
# roughly following this guide https://github.com/extremeshok/clamav-unofficial-sigs/blob/master/guides/ubuntu-debian.md

- name: Prepares install dirs for clamav-unofficial-sigs tool
  file:
    path: "{{ item }}"
    recurse: yes
    owner: root
    state: directory
  with_items:
    - "{{ clamav_unofficial_sigs_install_dir }}"
    - "{{ clamav_unofficial_sigs_config_dir }}"

- name: Download clamav-unofficial-sigs script to install dir
  get_url:
    url: "{{ clamav_unofficial_sigs_gh_url }}/clamav-unofficial-sigs.sh"
    dest: "{{ clamav_unofficial_sigs_install_dir}}/clamav-unofficial-sigs"
    mode: 0755

- name: Download clamav-unofficial-sigs configs to config dir, master.conf
  get_url:
    url: "{{ clamav_unofficial_sigs_gh_url }}/config/master.conf"
    dest: "{{ clamav_unofficial_sigs_config_dir }}/master.conf"

- name: os.ubuntu.conf
  get_url:
    url: "{{ clamav_unofficial_sigs_gh_url }}/config/os/os.ubuntu.conf"
    dest: "{{ clamav_unofficial_sigs_config_dir }}/os.conf"

- name: user.conf (unless role template is used)
  get_url:
    url: "{{ clamav_unofficial_sigs_gh_url }}/config/user.conf"
    dest: "{{ clamav_unofficial_sigs_config_dir }}/user.conf"
  when: not clamav_unofficial_sigs_custom_conf|bool

- name: Place custom user.conf for clamav-unofficial-sigs if enabled
  template:
    src: user.conf.j2
    dest: "{{ clamav_unofficial_sigs_config_dir }}/user.conf"
  when: clamav_unofficial_sigs_custom_conf|bool

- name: Get clamav-unofficial-sigs info output
  shell: '{{ clamav_unofficial_sigs_install_dir }}/clamav-unofficial-sigs --information'
  register: info_result

- name: Output clamav-unofficial-sigs infos
  debug:
    var: info_result.stdout_lines

- name: Run the clamav-unofficial-sigs install command
  shell: '{{ clamav_unofficial_sigs_install_dir }}/clamav-unofficial-sigs --force --verbose'
  register: install_result

- name: Output result of install step
  debug:
    var: install_result.stdout_lines

- name: Install clamav-unofficial-sigs logrotate config
  shell: '{{ clamav_unofficial_sigs_install_dir }}/clamav-unofficial-sigs --install-logrotate'
  when: clamav_unofficial_sigs_install_logrotate

- name: Install clamav-unofficial-sigs man-page
  shell: '{{ clamav_unofficial_sigs_install_dir }}/clamav-unofficial-sigs --install-man'
  when: clamav_unofficial_sigs_install_manpage

- name: Install systemd configs that run signature updates in boot and every hour after that
  template:
    src: "{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
  with_items:
    - clamav-unofficial-sigs.service
    - clamav-unofficial-sigs.timer

- name: Ensure the SystemD timer config is enabled to trigger signature updates on boot/hourly
  systemd:
    name: clamav-unofficial-sigs.timer
    daemon_reload: yes
    enabled: yes
    state: restarted

# -- End of clamav-unofficial-sigs install --

- name: Scan a file to ensure clamscan command works and has signatures loaded
  shell: 'clamscan /usr/local/sbin/clamav-unofficial-sigs'
  register: clamscan_result

- name: Show output of clamscan (signatures should be > 6.600.000)
  debug:
    var: clamscan_result.stdout_lines
